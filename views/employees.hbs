{{!-- Adapted from class demo project: https://github.com/osu-cs340-ecampus/nodejs-starter-app --}}

<h1>Employees</h1>

<div id="browse" style="display: block">
<form class="pure-form">
    <fieldset>
        <select name="filter-roleName" id="filter-roleName" onchange="filterTable()" required>
            <option value=''>Filter by role</option>
            {{#each roles}}
                <option value="{{this.roleName}}">{{this.roleName}}</option>
            {{/each}}
        </select>
    </fieldset>
</form>
<p><strong>Browse Employees</strong></p>
<table class="pure-table pure-table-bordered" id="Employees-table">
    <thead>
        <tr>
            {{#each employees.[0]}}
            <th>
                {{@key}}
            </th>
            {{/each}}
        </tr>
    </thead>
    <tbody>
        {{#each employees}}
        <tr>
            <td>{{this.employeeID}}</td>
            <td>{{this.name}}</td>
            <td>{{this.roleName}}</td>
            {{!-- If not null, display to 4 decimals. If null, display --}}
            <td>{{#if this.pay }} {{toFixed this.pay 4}} {{else}} {{this.pay}} {{/if}}</td>
        </tr>
        {{/each}}
    </tbody>
</table>
<p>&nbsp;</p>

<p>&nbsp;</p>
{{!-- Form to add a record to the table  --}}
<h2>Add Employee</h2>
<p>To add a new employee, please enter their information below and click 'Submit'!</p>
<p>Note that both role and pay are optional</p>
<form class="pure-form pure-form-aligned" id="add-employees-form-ajax">
    <fieldset>
        <div class="pure-control-group">
            <label for="input-name">name: </label>
            <input type="text" name="input-name" id="input-name" required>
        </div>

          <div class="pure-control-group">
            <label for="input-roleID">role:</label>
            <select name="input-roleID" id="input-roleID">
                <option value=''>Select a role</option>
                {{#each roles}}
                    <option value="{{this.roleID}}">{{this.roleName}}</option>
                {{/each}}
            </select>
        </div>

        <div class="pure-control-group">
            <label for="input-pay">pay: </label>
            <input type="number" min="0.00" step="0.01" name="input-pay" id="input-pay">
        </div>

        <div class="pure-controls">
            <button type="submit" class="pure-button pure-button-primary">Submit</button>
        </div>
    </fieldset>
</form>

<p>&nbsp;</p>
{{!-- Form to update a record to the table  --}}
<h2>Update Employee </h2>
<p>Select an employee from the drop down. Note that both pay and roleID are optional</p>

<form class="pure-form pure-form-aligned" id="update-employees-form-ajax">
    <fieldset>
          <div class="pure-control-group">
            <label for="update-employeeID">name:</label>
            <select name="update-employeeID" id="update-employeeID" required>
                <option value=''>Select an employee</option>
                {{#each employees}}
                    <option value="{{this.employeeID}}">{{this.name}}</option>
                {{/each}}
            </select>
        </div>

          <div class="pure-control-group">
            <label for="update-roleID">role:</label>
            <select name="update-roleID" id="update-roleID">
                <option value=''>Select a role</option>
                {{#each roles}}
                    <option value="{{this.roleID}}">{{this.roleName}}</option>
                {{/each}}
            </select>
        </div>

        <div class="pure-control-group">
            <label for="update-pay">pay: </label>
            <input type="number" min="0.00" step="0.01" name="update-pay" id="update-pay">
        </div>

        <div class="pure-controls">
            <button type="submit" class="pure-button pure-button-primary">Submit</button>
        </div>
    </fieldset>
</form>

{{!-- Embed our javascript to handle the DOM manipulation and AJAX request --}}
<script src="./js/employees.js"></script>

<script>
    // Adapted from https://stackoverflow.com/questions/9127498/how-to-perform-a-real-time-search-and-filter-on-a-html-table
    function filterTable() {
        // Declare variables 
        let inputValue = document.getElementById("filter-roleName").value
        let table = document.getElementById("Employees-table")
        let tr = table.getElementsByTagName("tr")

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")

            for(j=0 ; j<td.length ; j++) {
                let tdata = td[j]

                if (tdata) {
                    if (tdata.innerHTML.indexOf(inputValue) > -1) {
                        tr[i].style.display = ""
                        break
                    } else {
                        tr[i].style.display = "none"
                    }
                } 
            }
        }
    }
</script>